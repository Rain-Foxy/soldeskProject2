<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.fitsync.mapper.GymMapper">

  <!-- 1. 체육관 등록 -->
  <insert id="insertGym" parameterType="org.fitsync.domain.GymVO">
    INSERT INTO gym (
      gym_idx, gym_name, gym_latitude, gym_longitude, gym_address
    ) VALUES (
      gym_seq.NEXTVAL,
      #{gym_name},
      #{gym_latitude},
      #{gym_longitude},
      #{gym_address}
    )
  </insert>

  <!-- 2. 전체 체육관 목록 조회 -->
	<select id="selectAllGyms" parameterType="org.fitsync.domain.SearchCriteria" resultType="org.fitsync.domain.GymVO">
	  SELECT * FROM (
	    SELECT inner.*, ROWNUM rn FROM (
	      SELECT * FROM gym
	      <where>
	        <choose>
	          <!-- 특정 컬럼 검색 -->
	          <when test="keywordType == 'name' and keyword != null and keyword != ''">
	            REPLACE(gym_name, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	          </when>
	          <when test="keywordType == 'address' and keyword != null and keyword != ''">
	            REPLACE(gym_address, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	          </when>
	          <when test="keywordType == 'idx' and keyword != null and keyword != ''">
	            TO_CHAR(gym_idx) = REPLACE(#{keyword}, ' ', '')
	          </when>
	
	          <!-- keywordType이 없고 keyword만 있을 경우 전체 조건 검색 -->
	          <when test="(keywordType == null or keywordType == '') and keyword != null and keyword != ''">
	            (
	              REPLACE(gym_name, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	              OR REPLACE(gym_address, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	              OR TO_CHAR(gym_idx) = REPLACE(#{keyword}, ' ', '')
	            )
	          </when>
	        </choose>
	      </where>
	      ORDER BY gym_idx DESC
	    ) inner
	    WHERE ROWNUM &lt;= #{endRow}
	  )
	  WHERE rn &gt;= #{startRow}
	</select>


	
	<!-- 검색조건에 맞는 체육관 갯수 가져오기 -->
	<select id="countAllGyms" parameterType="org.fitsync.domain.SearchCriteria" resultType="int">
	  SELECT COUNT(*)
	  FROM gym
	  <where>
	    <choose>
	      <when test="keywordType == 'name' and keyword != null and keyword != ''">
	        REPLACE(gym_name, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	      </when>
	      <when test="keywordType == 'address' and keyword != null and keyword != ''">
	        REPLACE(gym_address, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	      </when>
	      <when test="keywordType == 'idx' and keyword != null and keyword != ''">
	        TO_CHAR(gym_idx) = REPLACE(#{keyword}, ' ', '')
	      </when>
	      <otherwise>
	        <if test="keyword != null and keyword != ''">
	          (
	            REPLACE(gym_name, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	            OR REPLACE(gym_address, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
	            OR TO_CHAR(gym_idx) = REPLACE(#{keyword}, ' ', '')
	          )
	        </if>
	      </otherwise>
	    </choose>
	  </where>
	</select>

  <!-- 3. 특정 체육관 조회 (by gym_idx) -->
  <select id="selectGymById" parameterType="int" resultType="org.fitsync.domain.GymVO">
    SELECT *
    FROM gym
    WHERE gym_idx = #{gym_idx}
  </select>

  <!-- 4. 체육관 정보 수정 -->
  <update id="updateGym" parameterType="org.fitsync.domain.GymVO">
    UPDATE gym
    SET
      gym_name = #{gym_name},
      gym_latitude = #{gym_latitude},
      gym_longitude = #{gym_longitude},
      gym_address = #{gym_address}
    WHERE gym_idx = #{gym_idx}
  </update>

  <!-- 5. 체육관 삭제 -->
  <delete id="deleteGym" parameterType="int">
    DELETE FROM gym
    WHERE gym_idx = #{gym_idx}
  </delete>
  
  <!-- 멤버 ID로 체육관 조회  -->
  <select id="selectGymByMemberId" parameterType="int" resultType="org.fitsync.domain.GymVO">
    SELECT *
    FROM gym
    WHERE member_idx = #{member_idx}
  </select>

</mapper>