<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.fitsync.mapper.ApiLogMapper">
	<insert id="insertApiLog" parameterType="org.fitsync.domain.ApiLogVO">
	    <!-- 시퀀스 값 사전 조회 -->
	    <selectKey keyProperty="apilog_idx" resultType="int" order="BEFORE">
	        SELECT apilog_seq.NEXTVAL FROM dual
	    </selectKey>
	
	    INSERT INTO apilog (
	        apilog_idx,
	        member_idx,
	        apilog_prompt,
	        apilog_response,
	        apilog_request_time,
	        apilog_response_time,
	        apilog_input_tokens,
	        apilog_output_tokens,
	        apilog_model,
	        apilog_version,
	        apilog_status,
	        apilog_user_action,
	        <if test="apilog_status_reason != null">
	        	apilog_status_reason,
	        </if>
	        apilog_service_type
	    ) VALUES (
	        #{apilog_idx},
	        #{member_idx},
	        #{apilog_prompt},
	        #{apilog_response},
	        #{apilog_request_time},
	        #{apilog_response_time},
	        #{apilog_input_tokens},
	        #{apilog_output_tokens},
	        #{apilog_model},
	        #{apilog_version},
	        #{apilog_status},
	       	<if test="apilog_status_reason != null">
	        	#{apilog_status_reason},
	        </if>
	        'ignore',
	        #{apilog_service_type}
	    )
	</insert>


    <select id="selectApiLogById" resultType="org.fitsync.domain.ApiLogVO" parameterType="int">
        SELECT *
        FROM apilog
        WHERE apilog_idx = #{apilog_idx}
    </select>
    
	<select id="selectApiList" resultType="org.fitsync.domain.ApiLogVO">
	    SELECT *
	    FROM apilog
	    ORDER BY apilog_idx
	</select>
	
	<!-- 로그 대시보드 개요 정보 가져오기 (필터링 적용) -->
	<select id="selectApiLogStats" parameterType="org.fitsync.domain.ApiLogSearchCriteria" resultType="org.fitsync.domain.ApiLogStatsDTO">
	  SELECT
	    COUNT(*) AS totalCount,
	    SUM(CASE WHEN apilog_status = 'success' THEN 1 ELSE 0 END) AS successCount,
	    SUM(CASE WHEN apilog_status = 'exception' THEN 1 ELSE 0 END) AS exceptionCount,
	    SUM(CASE WHEN apilog_status = 'fail' THEN 1 ELSE 0 END) AS failCount,
	    ROUND(AVG((CAST(apilog_response_time AS DATE) - CAST(apilog_request_time AS DATE)) * 86400), 2) AS avgResponseTime,
	    SUM(NVL(apilog_input_tokens, 0)) AS inputTokens,
	    SUM(NVL(apilog_output_tokens, 0)) AS outputTokens,
	    SUM(NVL(apilog_input_tokens, 0) + NVL(apilog_output_tokens, 0)) AS totalTokens,
	    COUNT(DISTINCT member_idx) AS uniqueUsers,
	    ROUND(SUM((CAST(apilog_response_time AS DATE) - CAST(apilog_request_time AS DATE)) * 86400), 2) AS totalProcessingTime
	  FROM apilog
	  <where>
	    <if test="status != null and status != 'all'">
	      AND apilog_status = #{status}
	    </if>
	    <if test="model != null and model != 'all'">
	      AND apilog_model = #{model}
	    </if>
	    <if test="serviceType != null and serviceType != 'all'">
	      AND apilog_service_type = #{serviceType}
	    </if>
	    <if test="version != null and version != 'all'">
	      AND apilog_version = #{version}
	    </if>
	    <if test="fromDate != null and toDate != null">
	      AND apilog_request_time BETWEEN TO_DATE(#{fromDate}, 'YYYY-MM-DD') AND TO_DATE(#{toDate}, 'YYYY-MM-DD') + 1
	    </if>
	  </where>
	</select>

    
    <!-- 예외 사유 업데이트 쿼리 -->
    <update id="updateExceptionReason" parameterType="org.fitsync.domain.ApiLogVO">
        UPDATE apilog SET 
        	apilog_status = #{apilog_status}, 
        	apilog_status_reason = #{apilog_status_reason} 
        WHERE apilog_idx = #{apilog_idx}
    </update>
    
	<update id="updateFeedBack" parameterType="org.fitsync.domain.ApiLogVO">
	    UPDATE apilog
	    <set>
	        apilog_feedback = #{apilog_feedback},
	        <if test="apilog_feedback_reason != null">
	            apilog_feedback_reason = #{apilog_feedback_reason},
	        </if>
	    </set>
	    WHERE apilog_idx = #{apilog_idx}
	</update>
	
	<!-- 사용자 행동 분석 -->
	<update id="updateUserAction" parameterType="org.fitsync.domain.ApiLogVO">
	    UPDATE apilog
	    SET apilog_user_action = #{apilog_user_action}
	    WHERE apilog_idx = #{apilog_idx}
	</update>

	<!-- 구독 기간 중 AI 요청 사용량 -->
	<select id="selectTokenUsageDuringLatestPaidOrder" parameterType="int" resultType="map">
		<![CDATA[
		SELECT
			NVL(SUM(NVL(a.apilog_input_tokens, 0)), 0) AS input_tokens,
			NVL(SUM(NVL(a.apilog_output_tokens, 0)), 0) AS output_tokens
		FROM apilog a
		WHERE a.member_idx = #{member_idx}
		AND a.apilog_request_time >= (
				SELECT MAX(p.order_paydate)
				FROM payment_order p
				WHERE p.member_idx = #{member_idx}
				AND p.order_status = 'PAID'
				AND p.order_paydate IS NOT NULL
			)
		AND a.apilog_request_time < (
				SELECT ADD_MONTHS(MAX(p.order_paydate), 1)
				FROM payment_order p
				WHERE p.member_idx = #{member_idx}
				AND p.order_status = 'PAID'
				AND p.order_paydate IS NOT NULL
			)
		]]>
	</select>
	
	<!-- 회원의 최초 루틴 추천 로그 1건만 조회 -->
	<select id="selectFirstRoutineLog" parameterType="int" resultType="org.fitsync.domain.ApiLogVO">
	    SELECT *
	    FROM (
	        SELECT *
	        FROM apilog
	        WHERE member_idx = #{member_idx}
	          AND apilog_service_type LIKE '%루틴 추천%'
	        ORDER BY apilog_request_time ASC
	    )
	    WHERE ROWNUM = 1
	</select>
	
	<!-- 회원별 자신의 로그 가져오기 -->
	<select id="selectByMemberId" parameterType="int" resultType="org.fitsync.domain.ApiLogVO">
	    SELECT * FROM apilog WHERE member_idx = #{member_idx} and apilog_status = 'success' order by apilog_idx desc
	</select>



</mapper>
