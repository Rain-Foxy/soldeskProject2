<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.fitsync.mapper.ReportMapper">
	<resultMap id="reportMap" type="org.fitsync.domain.ReportVO">
	    <id property="report_idx" column="REPORT_IDX"/>
	    <result property="report_category" column="REPORT_CATEGORY"/>
	    <result property="report_content" column="REPORT_CONTENT"/>
	    <result property="idx_num" column="IDX_NUM"/>
	    <result property="report_hidden" column="REPORT_HIDDEN"/>
	    <result property="report_sanction" column="REPORT_SANCTION"/>
	
	    <association property="reporter" javaType="org.fitsync.domain.MemberVO">
	        <id property="member_idx" column="member_idx"/>
	        <result property="member_email" column="member_email"/>
	        <result property="member_name" column="member_name"/>
	        <result property="member_type" column="member_type"/>
	    </association>
	</resultMap>
	
	<insert id="insertReport" parameterType="org.fitsync.domain.ReportVO">
		INSERT INTO REPORT (
			report_idx,
			idx_num,
			report_category,
			report_content,
			member_idx
		) VALUES (
		    REPORT_SEQ.nextval,
		    #{idx_num},
		    #{report_category},
		    #{report_content},
		    #{member_idx}
		)
	</insert>
	
	<select id="checkDuplicateReport" resultType="int">
		SELECT COUNT(*)
		FROM REPORT
		WHERE idx_num = #{idx_num}
		  AND member_idx = #{member_idx}
		  AND report_category = #{report_category}
		  AND report_hidden = 0
	</select>
	
	<select id="getReport" resultMap="reportMap">
	   SELECT 
	        RE.REPORT_IDX,
	        RE.REPORT_CATEGORY,
	        RE.REPORT_CONTENT,
	        RE.IDX_NUM,
	        RE.REPORT_HIDDEN,
	        RE.REPORT_SANCTION,
	        M.MEMBER_IDX,
	        M.MEMBER_EMAIL,
	        M.MEMBER_NAME,
	        M.MEMBER_TYPE
	    FROM REPORT RE
	    LEFT JOIN MEMBER M ON RE.MEMBER_IDX = M.MEMBER_IDX
	</select>

	<update id="updateReport" parameterType="map">
	    UPDATE REPORT
	    SET 
	        <if test="vo.report_sanction > 0">
	            REPORT_SANCTION = #{vo.report_sanction},
	            REPORT_TIME = SYSDATE + #{block_set},
	        </if>
	        REPORT_HIDDEN = 1
	    WHERE REPORT_IDX = #{vo.report_idx}
	</update>
	
	<!-- 제재정보 -->
	<select id="getBlockData" parameterType="int" resultType="org.fitsync.domain.ReportVO">
		SELECT 
			MAX(REPORT_TIME) report_time,
			COUNT(*) block_count
		FROM REPORT 
		WHERE REPORT_SANCTION = #{member_idx}
	</select>
	
	<!-- 프로필 신고 -->
	<insert id="insertProfileReport" parameterType="org.fitsync.domain.ReportVO">
	    INSERT INTO REPORT (
	      REPORT_IDX,
	      IDX_NUM,
	      REPORT_CATEGORY,
	      REPORT_CONTENT,
	      MEMBER_IDX,
	      REPORT_HIDDEN,
	      REPORT_TIME,
	      REPORT_SANCTION
	    )
	    VALUES (
	      REPORT_SEQ.NEXTVAL,
	      #{idx_num},
	      #{report_category},
	      #{report_content},
	      #{member_idx},
	      #{report_hidden},
	      SYSDATE,
	      #{report_sanction}
	    )
	</insert>
	
	<!-- UserProfileModal 사용자 프로필 신고 -->
	<insert id="insertUserProfileReport" parameterType="org.fitsync.domain.ReportVO">
	    INSERT INTO REPORT (
	      REPORT_IDX,
	      IDX_NUM,
	      REPORT_CATEGORY,
	      REPORT_CONTENT,
	      MEMBER_IDX,
	      REPORT_HIDDEN,
	      REPORT_TIME,
	      REPORT_SANCTION
	    )
	    VALUES (
	      REPORT_SEQ.NEXTVAL,
	      #{idx_num},              <!-- 신고 대상자의 member_idx -->
	      #{report_category},      <!-- "member" -->
	      #{report_content},       <!-- 신고 사유 -->
	      #{member_idx},           <!-- 신고자의 member_idx -->
	      #{report_hidden},        <!-- 숨김 여부 (기본값 0) -->
	      SYSDATE,                 <!-- 신고 시간 -->
	      #{report_sanction}       <!-- 제재 대상자 (NULL 또는 추후 설정) -->
	    )
	</insert>
</mapper>